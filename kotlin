MainActivity----------------------------


import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.TextView

class MainActivity : AppCompatActivity() {

    private var tv_id: TextView? = null
    private var tv_pass: TextView? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        tv_id = findViewById(R.id.tv_id)
        tv_pass = findViewById(R.id.tv_pass)

        val intent = getIntent()
        val id = intent.getStringExtra("id")
        val password = intent.getStringExtra("password")

        //아이디, 비밀번호 값 불러와 출력하기
        tv_id?.setText(id)
        tv_pass?.setText(password)
    }
    }


LoginActivity------------------------------------------


import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.EditText
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AlertDialog
import com.android.volley.Response
import com.android.volley.toolbox.Volley
import org.json.JSONException
import org.json.JSONObject

class LoginActivity : AppCompatActivity() {

    private var et_id: EditText? = null
    private var et_pass: EditText? = null
    private var btn_login: Button? = null
    private var btn_register: Button? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_login)

        et_id = findViewById(R.id.et_id)
        et_pass = findViewById(R.id.et_pass)
        btn_login = findViewById(R.id.btn_login)
        btn_register = findViewById(R.id.btn_register)

        btn_register?.setOnClickListener(View.OnClickListener {
            val intent = Intent(this, RegisterActivity::class.java)
            startActivity(intent)
        })

        btn_login?.setOnClickListener(View.OnClickListener {

            val id = et_id?.getText().toString()
            val password = et_pass?.getText().toString()

                val responseListener = Response.Listener<String?> { response ->
                    try {
                        val jsonObject = JSONObject(response)
                        val success = jsonObject.getBoolean("success")

                        if (success) { //로그인 성공
                            Toast.makeText(applicationContext, "로그인에 성공하였습니다.", Toast.LENGTH_SHORT)
                                .show()
                            val intent = Intent(this@LoginActivity, MainActivity::class.java)
                            intent.putExtra("id", id)
                            intent.putExtra("password", password)
                            startActivity(intent)
                        } else { //로그인 실패
                            Toast.makeText(applicationContext, "로그인에 실패하였습니다.", Toast.LENGTH_SHORT)
                                .show()
                            return@Listener
                        }
                    } catch (e: JSONException) {
                        e.printStackTrace()
                    }
                }

            val loginRequest = LoginRequest(id, password, responseListener)
            val queue = Volley.newRequestQueue(this@LoginActivity)
            queue.add(loginRequest)

        })
    }
}

LoginRequest---------------------------------


import com.android.volley.AuthFailureError
import com.android.volley.Response
import com.android.volley.toolbox.StringRequest
import java.util.HashMap

class LoginRequest(id: String, password: String, listener: Response.Listener<String?>) :
    StringRequest(
        Method.POST, URL, listener, null
    ) {
        private val map: MutableMap<String, String>

    //private Map<String, String>parameters;
    init {
        map = HashMap()
        map["id"] = id
        map["password"] = password
    }

    @Throws(AuthFailureError::class)
    override fun getParams(): Map<String, String>? {
        return map
    }

    companion object {
        //서버 URL 설정(php 파일 연동)
        private const val URL = "http://주소/Login.php"
    }
}

RegisterActivity----------------------------


import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import androidx.appcompat.app.AlertDialog
import com.android.volley.Response
import com.android.volley.toolbox.Volley
import kotlinx.android.synthetic.main.activity_register.*
import org.json.JSONException
import org.json.JSONObject

class RegisterActivity : AppCompatActivity() {

    private var et_id: EditText? = null
    private var et_pass: EditText? = null
    private var et_name: EditText? = null
    private var btn_register: Button? = null
    private var btn_idcheck: Button? = null
    private var validata: Boolean = false

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_register)

        //아이디 값 찾아주기
        et_id = findViewById(R.id.et_id)
        et_pass = findViewById(R.id.et_pass)
        et_name = findViewById(R.id.et_name)

        //아이디 중복체크 버튼 클릭 시 수행
        btn_idcheck = findViewById(R.id.btn_idcheck)
        btn_idcheck?.setOnClickListener(View.OnClickListener {

            //입력되어 있는 값을 get 해온다
            val id = et_id?.getText().toString()

            if (id == "") {
                val builder = AlertDialog.Builder(this@RegisterActivity)
                builder.setMessage("아이디를 적어주세요.")
                    .setPositiveButton("확인", null)
                    .create()
                builder.show()
            }

            val responseListener = Response.Listener<String?> { response ->

                try {
                    val jsonObject = JSONObject(response)

                    val success = jsonObject.getBoolean("success")

                    if (success) { //성공
                        Toast.makeText(applicationContext, "사용가능한 아이디입니다.", Toast.LENGTH_SHORT)
                            .show()
                        val intent = Intent(this@RegisterActivity, LoginActivity::class.java)
                        startActivity(intent)
                    } else {
                        Toast.makeText(applicationContext, "사용할 수 없는 아디이입니다.", Toast.LENGTH_SHORT)
                            .show()
                        return@Listener
                    }
                } catch (e: JSONException) {
                    e.printStackTrace()
                }
            }
        })

        //회원가입 버튼 클릭 시 수행
        btn_register = findViewById(R.id.btn_register)
        btn_register?.setOnClickListener(View.OnClickListener {

            //입력되어 있는 값을 get 해온다
            val id = et_id?.getText().toString()
            val password = et_pass?.getText().toString()
            val name = et_name?.getText().toString()

            if (!validata) {
                val builder = AlertDialog.Builder(this@RegisterActivity)
                builder.setMessage("아이디 중복체크를 해주세요.")
                    .setPositiveButton("확인", null)
                    .create()
                builder.show()
            }

            if (id == "" || password == "" || name == "") {
                val builder = AlertDialog.Builder(this@RegisterActivity)
                builder.setMessage("빈 칸 없이 입력해주세요.")
                    .setPositiveButton("확인", null)
                    .create()
                builder.show()
            }

            val responseListener = Response.Listener<String?> { response ->

                try {
                    val jsonObject = JSONObject(response)

                    val success = jsonObject.getBoolean("success")
                    if (success) { //성공
                        Toast.makeText(applicationContext, "회원등록에 성공하였습니다.", Toast.LENGTH_SHORT)
                            .show()
                        val intent = Intent(this@RegisterActivity, LoginActivity::class.java)
                        startActivity(intent)
                    } else {
                        Toast.makeText(applicationContext, "회원등록에 실패하였습니다.", Toast.LENGTH_SHORT)
                            .show()
                        return@Listener
                    }
                } catch (e: JSONException) {
                    e.printStackTrace()
                }
            }

            // 서버로 Volley를 이용해서 요청을 함.
            val registerRequest = RegisterRequest(id, password, name, responseListener)
            val queue = Volley.newRequestQueue(this@RegisterActivity)
            queue.add(registerRequest)

        })
    }
}

RegisterRequest----------------------------------------------------------


import com.android.volley.toolbox.StringRequest
import com.android.volley.AuthFailureError
import com.android.volley.Response
import java.util.HashMap

class RegisterRequest(id: String, password: String, name: String, listener: Response.Listener<String?>) :
    StringRequest(
        Method.POST, URL, listener, null
    ) {
        private val map: MutableMap<String, String>

        //private Map<String, String>parameters;
        init {
            map = HashMap()
            map["id"] = id
            map["password"] = password
            map["name"] = name
        }

        @Throws(AuthFailureError::class)
        override fun getParams(): Map<String, String>? {
            return map
        }

        companion object {
            //서버 URL 설정(php 파일 연동)
            private const val URL = "http://주소/Register.php"
        }
    }
    
usercheck----------------------------------------------------------
 
 
import com.android.volley.toolbox.StringRequest
import com.android.volley.AuthFailureError
import com.android.volley.Response
import java.util.HashMap

class usercheck (id: String, listener: Response.Listener<String?>) :
    StringRequest(Method.POST, URL, listener, null) {

    private val map: MutableMap<String, String>

    init {
        map = HashMap()
        map["id"] = id
    }

    @Throws(AuthFailureError::class)
    override fun getParams(): Map<String, String>? {
        return map
    }

    companion object {
        //서버 URL 설정(php 파일 연동)
        private const val URL = "http://주소/usercheck.php"
    }
}
